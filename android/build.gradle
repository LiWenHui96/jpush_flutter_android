import org.yaml.snakeyaml.Yaml

File flutter_project_dir = rootProject.projectDir.parentFile
def cfg = new Yaml().load(new File(flutter_project_dir, 'pubspec.yaml').text)

// JPush 厂商通道信息
Boolean jPushHuaweiEnable = cfg.jpush_android?.huawei?.enable
if (jPushHuaweiEnable == null) jPushHuaweiEnable = true
Boolean jPushXiaomiEnable = cfg.jpush_android?.xiaomi?.enable
if (jPushXiaomiEnable == null) jPushXiaomiEnable = true
Boolean jPushMeizuEnable = cfg.jpush_android?.meizu?.enable
if (jPushMeizuEnable == null) jPushMeizuEnable = true
Boolean jPushVivoEnable = cfg.jpush_android?.vivo?.enable
if (jPushVivoEnable == null) jPushVivoEnable = true
Boolean jPushOppoEnable = cfg.jpush_android?.oppo?.enable
if (jPushOppoEnable == null) jPushOppoEnable = true
Boolean jPushHonorEnable = cfg.jpush_android?.honor?.enable
if (jPushHonorEnable == null) jPushHonorEnable = true

group = "com.jpush.flutter.android"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
        flatDir { dirs project(":jpush_flutter_android").file("libs") }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath "org.yaml:snakeyaml:2.0"
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath 'com.huawei.agconnect:agcp:1.9.1.301'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
        flatDir { dirs project(":jpush_flutter_android").file("libs") }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: 'com.huawei.agconnect'

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.jpush.flutter.android"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 19

        // library 混淆 -> 随 library 引用，自动添加到 apk 打包混淆
        consumerProguardFiles 'proguard-rules.pro'
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")

        // 接入 华为 厂商
        if (jPushHuaweiEnable) {
            implementation 'com.huawei.hms:push:6.12.0.300'
            implementation 'cn.jiguang.sdk.plugin:huawei:5.5.3'
        }

        // 接入 小米 厂商
        if (jPushXiaomiEnable) {
            implementation 'cn.jiguang.sdk.plugin:xiaomi:5.5.3'
        }

        // 接入 魅族 厂商
        if (jPushMeizuEnable) {
            implementation 'cn.jiguang.sdk.plugin:meizu:5.5.3'
        }

        // 接入 vivo 厂商
        if (jPushVivoEnable) {
            implementation 'cn.jiguang.sdk.plugin:vivo:5.5.3'
        }

        // 接入 oppo 厂商
        if (jPushOppoEnable) {
            implementation 'cn.jiguang.sdk.plugin:oppo:5.5.3'
            implementation(name: 'com.heytap.msp-push-3.5.2', ext: 'aar')
            implementation 'com.google.code.gson:gson:2.6.2'
            implementation 'commons-codec:commons-codec:1.6'
            implementation 'androidx.annotation:annotation:1.1.0'
        }

        // 接入 荣耀 厂商
        if (jPushHonorEnable) {
            implementation 'cn.jiguang.sdk.plugin:honor:5.5.3'
            implementation(name: 'HiPushSDK-8.0.12.307', ext: 'aar')
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
